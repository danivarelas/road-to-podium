{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 5/react-project/src/pages/AddRecord/AddRecord.js\";\nimport React, { useState, useContext } from 'react';\nimport { RecordsContext } from '../../contexts/RecordsContext/RecordsContext';\nimport { activityTypes, runningDistances, swimmingDistances, cyclingDistances, triathlonDistances } from '../../utils/variables';\nimport NavBar from '../../components/NavBar/NavBar';\nimport MenuHeader from '../../components/MenuHeader/MenuHeader';\nimport { format } from 'date-fns';\n\nfunction AddRecord(props) {\n  const [activity, setActivity] = useState(\"Cycling\");\n  const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n  const [distance, setDistance] = useState(cyclingDistances[0]);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [customDistances, setCustomDistances] = useState(cyclingDistances);\n  const context = useContext(RecordsContext);\n\n  const addRecord = () => {\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds * 1;\n    context.addRecord(activity, date, distance, totalSeconds);\n    props.history.push(\"/dashboard\");\n  };\n\n  const goBack = () => {\n    props.history.push(\"/dashboard\");\n  };\n\n  const handleActivityChange = event => {\n    let value = event.target.value;\n    setActivity(value);\n\n    switch (value) {\n      case 'Running':\n        setCustomDistances(runningDistances);\n        setDistance(runningDistances[0]);\n        break;\n\n      case 'Swimming':\n        setCustomDistances(swimmingDistances);\n        setDistance(swimmingDistances[0]);\n        break;\n\n      case 'Cycling':\n        setCustomDistances(cyclingDistances);\n        setDistance(cyclingDistances[0]);\n        break;\n\n      case 'Triathlon':\n        setCustomDistances(triathlonDistances);\n        setDistance(triathlonDistances[0]);\n        break;\n\n      default:\n    }\n  };\n\n  const handleDateChange = event => {\n    setDate(event.target.value);\n  };\n\n  const handleDistanceChange = event => {\n    setDistance(event.target.value);\n  };\n\n  const handleHoursChange = event => {\n    setHours(event.target.value);\n  };\n\n  const handleMinutesChange = event => {\n    setMinutes(event.target.value);\n  };\n\n  const handleSecondsChange = event => {\n    setSeconds(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(MenuHeader, {\n    title: \"Log a new record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card card-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: addRecord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Activity\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"activity\",\n    onChange: handleActivityChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, activityTypes.map((type, index) => {\n    if (index === 0) {\n      return React.createElement(\"option\", {\n        key: type,\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, type);\n    } else {\n      return React.createElement(\"option\", {\n        key: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, type);\n    }\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"input\", {\n    required: true,\n    type: \"date\",\n    value: date,\n    className: \"form-control\",\n    id: \"date\",\n    onChange: handleDateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"distance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Distance\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"distance\",\n    onChange: handleDistanceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, customDistances.map(dist => {\n    return React.createElement(\"option\", {\n      key: dist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, dist);\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"hours\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Hours\"), React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"hours\",\n    placeholder: \"00\",\n    onChange: handleHoursChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"minutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Minutes\"), React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"59\",\n    className: \"form-control\",\n    id: \"minutes\",\n    placeholder: \"00\",\n    onChange: handleMinutesChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"seconds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Seconds\"), React.createElement(\"input\", {\n    type: \"number\",\n    value: \"00\",\n    min: \"0\",\n    max: \"59\",\n    className: \"form-control\",\n    id: \"seconds\",\n    placeholder: \"00\",\n    onChange: handleSecondsChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"cancel\",\n    onClick: goBack,\n    className: \"btn btn-danger btn-check-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success btn-check-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))))));\n}\n\nexport default AddRecord;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 5/react-project/src/pages/AddRecord/AddRecord.js"],"names":["React","useState","useContext","RecordsContext","activityTypes","runningDistances","swimmingDistances","cyclingDistances","triathlonDistances","NavBar","MenuHeader","format","AddRecord","props","activity","setActivity","date","setDate","Date","distance","setDistance","hours","setHours","minutes","setMinutes","seconds","setSeconds","customDistances","setCustomDistances","context","addRecord","totalSeconds","history","push","goBack","handleActivityChange","event","value","target","handleDateChange","handleDistanceChange","handleHoursChange","handleMinutesChange","handleSecondsChange","map","type","index","dist"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { RecordsContext } from '../../contexts/RecordsContext/RecordsContext';\nimport {\n    activityTypes,\n    runningDistances,\n    swimmingDistances,\n    cyclingDistances,\n    triathlonDistances\n} from '../../utils/variables';\nimport NavBar from '../../components/NavBar/NavBar';\nimport MenuHeader from '../../components/MenuHeader/MenuHeader';\nimport { format } from 'date-fns';\n\nfunction AddRecord(props) {\n\n    const [activity, setActivity] = useState(\"Cycling\");\n    const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n    const [distance, setDistance] = useState(cyclingDistances[0]);\n    const [hours, setHours] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [customDistances, setCustomDistances] = useState(cyclingDistances);\n\n    const context = useContext(RecordsContext);\n\n    const addRecord = () => {\n        const totalSeconds = (hours * 3600) + (minutes * 60) + (seconds * 1);\n        context.addRecord(activity, date, distance, totalSeconds);\n        props.history.push(\"/dashboard\");\n    };\n\n    const goBack = () => {\n        props.history.push(\"/dashboard\");\n    };\n\n    const handleActivityChange = event => {\n        let value = event.target.value;\n        setActivity(value);\n        switch (value) {\n            case 'Running':\n                setCustomDistances(runningDistances);\n                setDistance(runningDistances[0]);\n                break;\n            case 'Swimming':\n                setCustomDistances(swimmingDistances);\n                setDistance(swimmingDistances[0]);\n                break;\n            case 'Cycling':\n                setCustomDistances(cyclingDistances);\n                setDistance(cyclingDistances[0]);\n                break;\n            case 'Triathlon':\n                setCustomDistances(triathlonDistances);\n                setDistance(triathlonDistances[0]);\n                break;\n            default:\n        }\n    };\n\n    const handleDateChange = event => {\n        setDate(event.target.value);\n    };\n\n    const handleDistanceChange = event => {\n        setDistance(event.target.value);\n    };\n\n    const handleHoursChange = event => {\n        setHours(event.target.value);\n    };\n\n    const handleMinutesChange = event => {\n        setMinutes(event.target.value);\n    };\n\n    const handleSecondsChange = event => {\n        setSeconds(event.target.value);\n    };\n\n    return (\n        <div>\n            <NavBar></NavBar>\n            <MenuHeader title=\"Log a new record\"></MenuHeader>\n            <div className=\"container\">\n                <div className=\"card card-form\">\n                    <form onSubmit={addRecord}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"activity\">Activity</label>\n                            <select className=\"form-control\" id=\"activity\" onChange={handleActivityChange}>\n                                {activityTypes.map((type, index) => {\n                                    if (index === 0) {\n                                        return <option key={type} selected>{type}</option>;\n                                    } else {\n                                        return <option key={type}>{type}</option>;\n                                    }\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"date\">Date</label>\n                            <input required type=\"date\" value={date} className=\"form-control\" id=\"date\" onChange={handleDateChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"distance\">Distance</label>\n                            <select className=\"form-control\" id=\"distance\" onChange={handleDistanceChange}>\n                                {customDistances.map(dist => {\n                                    return <option key={dist}>{dist}</option>;\n                                })}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-4\">\n                                    <label htmlFor=\"hours\">Hours</label>\n                                    <input type=\"number\" className=\"form-control\" id=\"hours\" placeholder=\"00\" onChange={handleHoursChange} />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label htmlFor=\"minutes\">Minutes</label>\n                                    <input type=\"number\"  min=\"0\" max=\"59\" className=\"form-control\" id=\"minutes\" placeholder=\"00\" onChange={handleMinutesChange} />\n                                </div>\n                                <div className=\"form-group col-md-4\">\n                                    <label htmlFor=\"seconds\">Seconds</label>\n                                    <input type=\"number\" value=\"00\" min=\"0\" max=\"59\" className=\"form-control\" id=\"seconds\" placeholder=\"00\" onChange={handleSecondsChange} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"cancel\" onClick={goBack} className=\"btn btn-danger btn-check-form\">\n                                <i className=\"fas fa-times\"></i>\n                            </button>\n                            <button type=\"submit\" className=\"btn btn-success btn-check-form\">\n                                <i className=\"fas fa-check\"></i>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddRecord;"]},"metadata":{},"sourceType":"module"}