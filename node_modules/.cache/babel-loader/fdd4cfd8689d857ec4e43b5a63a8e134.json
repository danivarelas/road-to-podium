{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/RacesContext/RacesContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const RacesContext = createContext();\n\nclass RacesContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allRaces: JSON.parse(localStorage.getItem('allRaces')),\n      filteredRaces: []\n    };\n\n    this.getRaces = () => {\n      return JSON.parse(localStorage.getItem('allRaces'));\n    };\n\n    this.addRace = (name, type, date, distance) => {\n      let races = JSON.parse(localStorage.getItem('allRaces'));\n      let newRaces = [];\n\n      if (races) {\n        newRaces = [...races, {\n          name: name,\n          type: type,\n          date: date,\n          distance: distance\n        }];\n      } else {\n        newRaces = [...newRaces, {\n          name: name,\n          type: type,\n          date: date,\n          distance: distance\n        }];\n      }\n\n      this.setState({\n        allRaces: newRaces\n      });\n      localStorage.setItem('allRaces', JSON.stringify(newRaces));\n    };\n\n    this.filterRaces = filterText => {\n      let races = JSON.parse(localStorage.getItem('allRaces'));\n      const newRaces = races.filter(race => {\n        console.log(race);\n        return race.name.toLowercase().includes(filterText);\n      });\n      return newRaces;\n    };\n  }\n\n  render() {\n    return React.createElement(RacesContext.Provider, {\n      value: { ...this.state,\n        addRace: this.addRace,\n        filterRaces: this.filterRaces,\n        getRaces: this.getRaces\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default RacesContextProvider;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/RacesContext/RacesContext.js"],"names":["React","createContext","Component","RacesContext","RacesContextProvider","state","allRaces","JSON","parse","localStorage","getItem","filteredRaces","getRaces","addRace","name","type","date","distance","races","newRaces","setState","setItem","stringify","filterRaces","filterText","filter","race","console","log","toLowercase","includes","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAEP,MAAMG,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACJC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADN;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAFiC;;AAAA,SAOzCC,QAPyC,GAO9B,MAAM;AACb,aAAOL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAP;AACH,KATwC;;AAAA,SAWzCG,OAXyC,GAW/B,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,QAAnB,KAAgC;AACtC,UAAIC,KAAK,GAAGX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,UAAIS,QAAQ,GAAG,EAAf;;AACA,UAAID,KAAJ,EAAW;AACPC,QAAAA,QAAQ,GAAG,CAAC,GAAGD,KAAJ,EAAW;AAClBJ,UAAAA,IAAI,EAAEA,IADY;AAElBC,UAAAA,IAAI,EAAEA,IAFY;AAGlBC,UAAAA,IAAI,EAAEA,IAHY;AAIlBC,UAAAA,QAAQ,EAAEA;AAJQ,SAAX,CAAX;AAMH,OAPD,MAOO;AACHE,QAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AACrBL,UAAAA,IAAI,EAAEA,IADe;AAErBC,UAAAA,IAAI,EAAEA,IAFe;AAGrBC,UAAAA,IAAI,EAAEA,IAHe;AAIrBC,UAAAA,QAAQ,EAAEA;AAJW,SAAd,CAAX;AAMH;;AACD,WAAKG,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAEa;AAAZ,OAAd;AACAV,MAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCd,IAAI,CAACe,SAAL,CAAeH,QAAf,CAAjC;AACH,KA/BwC;;AAAA,SAiCzCI,WAjCyC,GAiC1BC,UAAD,IAAgB;AAC1B,UAAIN,KAAK,GAAGX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,YAAMS,QAAQ,GAAGD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAU;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,eAAOA,IAAI,CAACZ,IAAL,CAAUe,WAAV,GAAwBC,QAAxB,CAAiCN,UAAjC,CAAP;AACH,OAHgB,CAAjB;AAIA,aAAOL,QAAP;AACH,KAxCwC;AAAA;;AA0CzCY,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAK1B,KADkB;AAE1BQ,QAAAA,OAAO,EAAE,KAAKA,OAFY;AAG1BU,QAAAA,WAAW,EAAE,KAAKA,WAHQ;AAI1BX,QAAAA,QAAQ,EAAE,KAAKA;AAJW,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,KAAKoB,KAAL,CAAWC,QANhB,CADJ;AAUH;;AArDwC;;AAwD7C,eAAe7B,oBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const RacesContext = createContext();\n\nclass RacesContextProvider extends Component {\n\n    state = {\n        allRaces: JSON.parse(localStorage.getItem('allRaces')),\n        filteredRaces: []\n    };\n\n    getRaces = () => {\n        return JSON.parse(localStorage.getItem('allRaces'));\n    }\n\n    addRace = (name, type, date, distance) => {\n        let races = JSON.parse(localStorage.getItem('allRaces'));\n        let newRaces = [];\n        if (races) {\n            newRaces = [...races, {\n                name: name,\n                type: type,\n                date: date,\n                distance: distance\n            }];\n        } else {\n            newRaces = [...newRaces, {\n                name: name,\n                type: type,\n                date: date,\n                distance: distance\n            }];\n        }\n        this.setState({ allRaces: newRaces });\n        localStorage.setItem('allRaces', JSON.stringify(newRaces));\n    };\n\n    filterRaces = (filterText) => {\n        let races = JSON.parse(localStorage.getItem('allRaces'));\n        const newRaces = races.filter((race) => {\n            console.log(race);\n            return race.name.toLowercase().includes(filterText);\n        });\n        return newRaces;\n    }\n\n    render() {\n        return (\n            <RacesContext.Provider value={{\n                ...this.state,\n                addRace: this.addRace,\n                filterRaces: this.filterRaces,\n                getRaces: this.getRaces\n            }}>\n                {this.props.children}\n            </RacesContext.Provider>\n        );\n    }\n}\n\nexport default RacesContextProvider;\n"]},"metadata":{},"sourceType":"module"}