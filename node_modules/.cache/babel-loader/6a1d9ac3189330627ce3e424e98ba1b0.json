{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/RecordsContext/RecordsContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const RecordsContext = createContext();\n\nclass RecordsContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      runningRecords: [],\n      swimmingRecords: [],\n      cyclingRecords: [],\n      triathlonRecords: []\n    };\n\n    this.addRecord = (activity, date, distance, time) => {\n      switch (activity) {\n        case 'Running':\n          this.setState({\n            runningRecords: this.updateRecord(distance, date, time, this.state.runningRecords)\n          });\n          break;\n\n        case 'Swimming':\n          this.setState({\n            swimmingRecords: this.updateRecord(distance, date, time, this.state.swimmingRecords)\n          });\n          break;\n\n        case 'Cycling':\n          this.setState({\n            cyclingRecords: this.updateRecord(distance, date, time, this.state.cyclingRecords)\n          });\n          break;\n\n        case 'Triathlon':\n          this.setState({\n            triathlonRecords: this.updateRecord(distance, date, time, this.state.triathlonRecords)\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.updateRecord = (distance, date, time, records) => {\n      // console.log(distance)\n      // console.log(date)\n      // console.log(time)\n      let found = false;\n      const newRecords = records.map(record => {\n        if (record.distance === distance) {\n          record.date = date;\n          record.time = time;\n          found = true;\n        }\n\n        return record;\n      });\n      console.log(newRecords);\n\n      if (!found) {\n        const oldRecords = [...newRecords, {\n          date: date,\n          distance: distance,\n          time: time\n        }];\n        console.log(oldRecords);\n        return oldRecords;\n      }\n\n      return newRecords;\n    };\n  }\n\n  render() {\n    return React.createElement(RecordsContext.Provider, {\n      value: { ...this.state,\n        addRecord: this.addRecord\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default RecordsContextProvider;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/RecordsContext/RecordsContext.js"],"names":["React","createContext","Component","RecordsContext","RecordsContextProvider","state","runningRecords","swimmingRecords","cyclingRecords","triathlonRecords","addRecord","activity","date","distance","time","setState","updateRecord","records","found","newRecords","map","record","console","log","oldRecords","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,cAAc,GAAGF,aAAa,EAApC;;AAEP,MAAMG,sBAAN,SAAqCF,SAArC,CAA+C;AAAA;AAAA;AAAA,SAE3CG,KAF2C,GAEnC;AACJC,MAAAA,cAAc,EAAE,EADZ;AAEJC,MAAAA,eAAe,EAAE,EAFb;AAGJC,MAAAA,cAAc,EAAE,EAHZ;AAIJC,MAAAA,gBAAgB,EAAE;AAJd,KAFmC;;AAAA,SAS3CC,SAT2C,GAS/B,CAACC,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,IAA3B,KAAoC;AAC5C,cAAQH,QAAR;AACI,aAAK,SAAL;AACI,eAAKI,QAAL,CAAc;AACVT,YAAAA,cAAc,EAAE,KAAKU,YAAL,CAAkBH,QAAlB,EAA4BD,IAA5B,EAAkCE,IAAlC,EAAwC,KAAKT,KAAL,CAAWC,cAAnD;AADN,WAAd;AAGA;;AACJ,aAAK,UAAL;AACI,eAAKS,QAAL,CAAc;AACVR,YAAAA,eAAe,EAAE,KAAKS,YAAL,CAAkBH,QAAlB,EAA4BD,IAA5B,EAAkCE,IAAlC,EAAwC,KAAKT,KAAL,CAAWE,eAAnD;AADP,WAAd;AAGA;;AACJ,aAAK,SAAL;AACI,eAAKQ,QAAL,CAAc;AACVP,YAAAA,cAAc,EAAE,KAAKQ,YAAL,CAAkBH,QAAlB,EAA4BD,IAA5B,EAAkCE,IAAlC,EAAwC,KAAKT,KAAL,CAAWG,cAAnD;AADN,WAAd;AAGA;;AACJ,aAAK,WAAL;AACI,eAAKO,QAAL,CAAc;AACVN,YAAAA,gBAAgB,EAAE,KAAKO,YAAL,CAAkBH,QAAlB,EAA4BD,IAA5B,EAAkCE,IAAlC,EAAwC,KAAKT,KAAL,CAAWI,gBAAnD;AADR,WAAd;AAGA;;AACJ;AArBJ;AAuBH,KAjC0C;;AAAA,SAmC3CO,YAnC2C,GAmC5B,CAACH,QAAD,EAAWD,IAAX,EAAiBE,IAAjB,EAAuBG,OAAvB,KAAmC;AAC9C;AACA;AACA;AACA,UAAIC,KAAK,GAAG,KAAZ;AACA,YAAMC,UAAU,GAAGF,OAAO,CAACG,GAAR,CAAYC,MAAM,IAAI;AACrC,YAAGA,MAAM,CAACR,QAAP,KAAoBA,QAAvB,EAAiC;AAC7BQ,UAAAA,MAAM,CAACT,IAAP,GAAcA,IAAd;AACAS,UAAAA,MAAM,CAACP,IAAP,GAAcA,IAAd;AACAI,UAAAA,KAAK,GAAG,IAAR;AACH;;AACD,eAAOG,MAAP;AACH,OAPkB,CAAnB;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;AACA,UAAI,CAACD,KAAL,EAAY;AACR,cAAMM,UAAU,GAAG,CAAC,GAAGL,UAAJ,EAAgB;AAC/BP,UAAAA,IAAI,EAAEA,IADyB;AAE/BC,UAAAA,QAAQ,EAAEA,QAFqB;AAG/BC,UAAAA,IAAI,EAAEA;AAHyB,SAAhB,CAAnB;AAKAQ,QAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,eAAOA,UAAP;AACH;;AACD,aAAOL,UAAP;AACH,KA3D0C;AAAA;;AA6D3CM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAKpB,KADoB;AAE5BK,QAAAA,SAAS,EAAE,KAAKA;AAFY,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,KAAKgB,KAAL,CAAWC,QAJhB,CADJ;AAQH;;AAtE0C;;AAyE/C,eAAevB,sBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const RecordsContext = createContext();\n\nclass RecordsContextProvider extends Component {\n\n    state = {\n        runningRecords: [],\n        swimmingRecords: [],\n        cyclingRecords: [],\n        triathlonRecords: []\n    };\n    \n    addRecord = (activity, date, distance, time) => {\n        switch (activity) {\n            case 'Running':\n                this.setState({\n                    runningRecords: this.updateRecord(distance, date, time, this.state.runningRecords)\n                });\n                break;\n            case 'Swimming':\n                this.setState({\n                    swimmingRecords: this.updateRecord(distance, date, time, this.state.swimmingRecords)\n                });\n                break;\n            case 'Cycling':\n                this.setState({\n                    cyclingRecords: this.updateRecord(distance, date, time, this.state.cyclingRecords)\n                });\n                break;\n            case 'Triathlon':\n                this.setState({\n                    triathlonRecords: this.updateRecord(distance, date, time, this.state.triathlonRecords)\n                });\n                break;\n            default:\n        }\n    };\n\n    updateRecord = (distance, date, time, records) => {\n        // console.log(distance)\n        // console.log(date)\n        // console.log(time)\n        let found = false;\n        const newRecords = records.map(record => {\n            if(record.distance === distance) {\n                record.date = date;\n                record.time = time;\n                found = true;\n            }\n            return record;\n        });\n        console.log(newRecords)\n        if (!found) {\n            const oldRecords = [...newRecords, {\n                date: date,\n                distance: distance,\n                time: time\n            }];\n            console.log(oldRecords)\n            return oldRecords;\n        }\n        return newRecords;\n    };\n\n    render() {\n        return (\n            <RecordsContext.Provider value={{\n                ...this.state,\n                addRecord: this.addRecord\n            }}>\n                {this.props.children}\n            </RecordsContext.Provider>\n        );\n    }\n}\n\nexport default RecordsContextProvider;"]},"metadata":{},"sourceType":"module"}