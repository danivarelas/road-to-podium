{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/GoalsContext/GoalsContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const GoalsContext = createContext();\n\nclass GoalsContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allGoals: []\n    };\n\n    this.addGoal = (id, date, description, completed) => {\n      this.setState({\n        allGoals: [...this.state.allGoals, {\n          id: id,\n          date: date,\n          description: description,\n          completed: completed\n        }]\n      });\n    };\n\n    this.toggleComplete = id => {\n      this.setState(state => {\n        const newGoals = state.allGoals.map(goal => {\n          if (goal.id === id) {\n            goal.completed = !goal.completed;\n          }\n\n          return goal;\n        });\n        return {\n          newGoals\n        };\n      }); // let newGoals = Object.assign({}, this.state.allGoals);\n      // console.log(newGoals);\n      // newGoals = newGoals.map(goal => {\n      //     if(goal.id === id) {\n      //         goal.completed = !goal.completed;\n      //     }\n      //     return goal;\n      // });\n      // this.setState({allGoals: newGoals});\n    };\n  }\n\n  render() {\n    return React.createElement(GoalsContext.Provider, {\n      value: { ...this.state,\n        addGoal: this.addGoal,\n        toggleComplete: this.toggleComplete\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default GoalsContextProvider;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/GoalsContext/GoalsContext.js"],"names":["React","createContext","Component","GoalsContext","GoalsContextProvider","state","allGoals","addGoal","id","date","description","completed","setState","toggleComplete","newGoals","map","goal","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAEP,MAAMG,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACJC,MAAAA,QAAQ,EAAE;AADN,KAFiC;;AAAA,SAMzCC,OANyC,GAM/B,CAACC,EAAD,EAAKC,IAAL,EAAWC,WAAX,EAAwBC,SAAxB,KAAsC;AAC5C,WAAKC,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AAC/BE,UAAAA,EAAE,EAAEA,EAD2B;AAE/BC,UAAAA,IAAI,EAAEA,IAFyB;AAG/BC,UAAAA,WAAW,EAAEA,WAHkB;AAI/BC,UAAAA,SAAS,EAAEA;AAJoB,SAAzB;AADA,OAAd;AAQH,KAfwC;;AAAA,SAiBzCE,cAjByC,GAiBvBL,EAAD,IAAQ;AACrB,WAAKI,QAAL,CAAcP,KAAK,IAAI;AACnB,cAAMS,QAAQ,GAAGT,KAAK,CAACC,QAAN,CAAeS,GAAf,CAAmBC,IAAI,IAAI;AACxC,cAAGA,IAAI,CAACR,EAAL,KAAYA,EAAf,EAAmB;AACfQ,YAAAA,IAAI,CAACL,SAAL,GAAiB,CAACK,IAAI,CAACL,SAAvB;AACH;;AACD,iBAAOK,IAAP;AACC,SALY,CAAjB;AAMA,eAAO;AACLF,UAAAA;AADK,SAAP;AAGH,OAVD,EADqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAtCwC;AAAA;;AAwCzCG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKZ,KADkB;AAE1BE,QAAAA,OAAO,EAAE,KAAKA,OAFY;AAG1BM,QAAAA,cAAc,EAAE,KAAKA;AAHK,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKK,KAAL,CAAWC,QALhB,CADJ;AASH;;AAlDwC;;AAqD7C,eAAef,oBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const GoalsContext = createContext();\n\nclass GoalsContextProvider extends Component {\n\n    state = {\n        allGoals: []\n    };\n\n    addGoal = (id, date, description, completed) => {\n        this.setState({\n            allGoals: [...this.state.allGoals, {\n                id: id,\n                date: date,\n                description: description,\n                completed: completed\n            }]\n        });\n    };\n\n    toggleComplete = (id) => {\n        this.setState(state => {\n            const newGoals = state.allGoals.map(goal => {\n                if(goal.id === id) {\n                    goal.completed = !goal.completed;\n                }\n                return goal;\n                });\n            return {\n              newGoals\n            };\n        });\n        // let newGoals = Object.assign({}, this.state.allGoals);\n        // console.log(newGoals);\n        // newGoals = newGoals.map(goal => {\n        //     if(goal.id === id) {\n        //         goal.completed = !goal.completed;\n        //     }\n        //     return goal;\n        // });\n        // this.setState({allGoals: newGoals});\n    };\n\n    render() {\n        return (\n            <GoalsContext.Provider value={{\n                ...this.state,\n                addGoal: this.addGoal,\n                toggleComplete: this.toggleComplete\n            }}>\n                {this.props.children}\n            </GoalsContext.Provider>\n        );\n    }\n}\n\nexport default GoalsContextProvider;"]},"metadata":{},"sourceType":"module"}