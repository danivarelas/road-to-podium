{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/GoalsContext/GoalsContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const GoalsContext = createContext();\n\nclass GoalsContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allGoals: JSON.parse(localStorage.getItem('allGoals'))\n    };\n\n    this.getGoals = () => {\n      return JSON.parse(localStorage.getItem('allGoals'));\n    };\n\n    this.addGoal = (id, date, description, completed) => {\n      let goals = JSON.parse(localStorage.getItem('allGoals'));\n      let newGoals = [];\n\n      if (goals) {\n        newGoals = [...goals, {\n          id: id,\n          date: date,\n          description: description,\n          completed: completed\n        }];\n      } else {\n        newGoals = [...newGoals, {\n          id: id,\n          date: date,\n          description: description,\n          completed: completed\n        }];\n      }\n\n      this.setState({\n        allGoals: newGoals\n      });\n      localStorage.setItem('allGoals', JSON.stringify(newGoals));\n    };\n\n    this.toggleComplete = id => {\n      let goals = JSON.parse(localStorage.getItem('allGoals'));\n      const newGoals = goals.map(goal => {\n        if (goal.id === id) {\n          goal.completed = !goal.completed;\n        }\n\n        return goal;\n      });\n      this.setState({\n        allGoals: newGoals\n      });\n      localStorage.setItem('allGoals', JSON.stringify(newGoals));\n    };\n  }\n\n  render() {\n    return React.createElement(GoalsContext.Provider, {\n      value: { ...this.state,\n        addGoal: this.addGoal,\n        toggleComplete: this.toggleComplete\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default GoalsContextProvider;","map":{"version":3,"sources":["/Users/user/Desktop/web-dev-program/week 5/react-project/src/contexts/GoalsContext/GoalsContext.js"],"names":["React","createContext","Component","GoalsContext","GoalsContextProvider","state","allGoals","JSON","parse","localStorage","getItem","getGoals","addGoal","id","date","description","completed","goals","newGoals","setState","setItem","stringify","toggleComplete","map","goal","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAEP,MAAMG,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCG,KAFyC,GAEjC;AACJC,MAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AADN,KAFiC;;AAAA,SAMzCC,QANyC,GAM9B,MAAM;AACb,aAAOJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAP;AACH,KARwC;;AAAA,SAUzCE,OAVyC,GAU/B,CAACC,EAAD,EAAKC,IAAL,EAAWC,WAAX,EAAwBC,SAAxB,KAAsC;AAC5C,UAAIC,KAAK,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,UAAIQ,QAAQ,GAAG,EAAf;;AACA,UAAID,KAAJ,EAAW;AACPC,QAAAA,QAAQ,GAAG,CAAC,GAAGD,KAAJ,EAAW;AAClBJ,UAAAA,EAAE,EAAEA,EADc;AAElBC,UAAAA,IAAI,EAAEA,IAFY;AAGlBC,UAAAA,WAAW,EAAEA,WAHK;AAIlBC,UAAAA,SAAS,EAAEA;AAJO,SAAX,CAAX;AAMH,OAPD,MAOO;AACHE,QAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AACrBL,UAAAA,EAAE,EAAEA,EADiB;AAErBC,UAAAA,IAAI,EAAEA,IAFe;AAGrBC,UAAAA,WAAW,EAAEA,WAHQ;AAIrBC,UAAAA,SAAS,EAAEA;AAJU,SAAd,CAAX;AAMH;;AACD,WAAKG,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEY;AAAZ,OAAd;AACAT,MAAAA,YAAY,CAACW,OAAb,CAAqB,UAArB,EAAiCb,IAAI,CAACc,SAAL,CAAeH,QAAf,CAAjC;AACH,KA9BwC;;AAAA,SAgCzCI,cAhCyC,GAgCvBT,EAAD,IAAQ;AACrB,UAAII,KAAK,GAAGV,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAZ;AACA,YAAMQ,QAAQ,GAAGD,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AAC/B,YAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;AAChBW,UAAAA,IAAI,CAACR,SAAL,GAAiB,CAACQ,IAAI,CAACR,SAAvB;AACH;;AACD,eAAOQ,IAAP;AACH,OALgB,CAAjB;AAMA,WAAKL,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEY;AAAZ,OAAd;AACAT,MAAAA,YAAY,CAACW,OAAb,CAAqB,UAArB,EAAiCb,IAAI,CAACc,SAAL,CAAeH,QAAf,CAAjC;AACH,KA1CwC;AAAA;;AA4CzCO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,EAC1B,GAAG,KAAKpB,KADkB;AAE1BO,QAAAA,OAAO,EAAE,KAAKA,OAFY;AAG1BU,QAAAA,cAAc,EAAE,KAAKA;AAHK,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKI,KAAL,CAAWC,QALhB,CADJ;AASH;;AAtDwC;;AAyD7C,eAAevB,oBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\n\nexport const GoalsContext = createContext();\n\nclass GoalsContextProvider extends Component {\n\n    state = {\n        allGoals: JSON.parse(localStorage.getItem('allGoals'))\n    };\n\n    getGoals = () => {\n        return JSON.parse(localStorage.getItem('allGoals'));\n    }\n\n    addGoal = (id, date, description, completed) => {\n        let goals = JSON.parse(localStorage.getItem('allGoals'));\n        let newGoals = [];\n        if (goals) {\n            newGoals = [...goals, {\n                id: id,\n                date: date,\n                description: description,\n                completed: completed\n            }];\n        } else {\n            newGoals = [...newGoals, {\n                id: id,\n                date: date,\n                description: description,\n                completed: completed\n            }]\n        }\n        this.setState({ allGoals: newGoals });\n        localStorage.setItem('allGoals', JSON.stringify(newGoals));\n    };\n\n    toggleComplete = (id) => {\n        let goals = JSON.parse(localStorage.getItem('allGoals'));\n        const newGoals = goals.map(goal => {\n            if (goal.id === id) {\n                goal.completed = !goal.completed;\n            }\n            return goal;\n        });\n        this.setState({ allGoals: newGoals });\n        localStorage.setItem('allGoals', JSON.stringify(newGoals));\n    };\n\n    render() {\n        return (\n            <GoalsContext.Provider value={{\n                ...this.state,\n                addGoal: this.addGoal,\n                toggleComplete: this.toggleComplete\n            }}>\n                {this.props.children}\n            </GoalsContext.Provider>\n        );\n    }\n}\n\nexport default GoalsContextProvider;"]},"metadata":{},"sourceType":"module"}